# exportkey: Generate and export TSIG keys
# Intended to be run on the slave
# Requires the bind::puppetmaster class to be loaded to securely generate and distribute the key
define bind::slave::exportkey (
  $slave_hostname,
  $view,
  $retention = "3 months",
  ) {

    $keyname = "$slave_hostname.$view.key"
    $source_keyfile = "/var/spool/puppet/remote/bind/keys/$keyname"
    # Also generated in slave zone.conf.erb
    $server_keyfile = "/etc/bind/keys/$keyname"
    
    # Puppetmaster key file and generation resource
    @@file { "$source_keyfile":
      # This file is generated by the below script.
      # File resource is included to purge it on slave decomission.
      owner   => puppet,
      group   => puppet,
      mode    => 640,
      ensure  => present,
      tag     => "bind_slave_key_puppetmaster_file",
    }
              
    @@exec { "generate bind slave key $keyname":
      # This script is idempotent.
      command     => "/var/spool/puppet/remote/bind/bin/mkBindKey.sh $slave_hostname $source_keyfile '$retention'",
      cwd         => "/var/spool/puppet/remote/bind/",
      tag         => "bind_slave_key_puppetmaster_exec",
    }

    # Export key in bind config format to the master
    @@file { "exported $server_keyfile":
      path    => "$server_keyfile",
      ensure => file,
      owner   => root,
      group   => bind,
      mode    => 640,
      tag => "bind_slave_key_config",
      content  => template("bind/slave/keyfile.erb"),
      notify  => Service["bind9_$view"],
    }

    # Save key on the slave
    file { "local $server_keyfile":
      path    => "$server_keyfile",
      ensure  => file,
      owner   => root,
      group   => bind,
      mode    => 640,
      content  => template("bind/slave/keyfile.erb"),
      notify  => Service["bind9"],
    }
  }

    
